name: PHPStan

on:
  workflow_call:
    inputs:
      phpVersion:
        description: "The PHP version to use. Defaults to 'latest'."
        type: string
        required: false
        default: "latest"
      phpstanVersion:
        description: "The PHPStan version to use. Defaults to the latest available version."
        type: string
        required: false
        default: ""

jobs:
  phpstan:
    name: "PHPStan"
    runs-on: "ubuntu-latest"

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Check for existence of a PHPStan config file
        id: has_config
        uses: andstor/file-existence-action@v3
        with:
          files: "phpstan.neon*"

      - name: Create tools string
        id: tools
        run: |
          if [ "${{ inputs.phpstanVersion }}" == "" ]; then
            echo 'TOOLS=phpstan' >> "$GITHUB_OUTPUT"
          else
            echo 'TOOLS=phpstan:${{ inputs.phpstanVersion }}' >> "$GITHUB_OUTPUT"
          fi

      - name: Install PHP
        if: ${{ steps.has_config.outputs.files_exists == 'true' }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ inputs.phpVersion }}
          coverage: none
          tools: ${{ steps.tools.outputs.TOOLS }}

      # Install dependencies and handle caching in one go.
      # Dependencies need to be installed to make sure the PHPUnit classes are recognized.
      # @link https://github.com/marketplace/actions/install-php-dependencies-with-composer
      - name: Install Composer dependencies
        if: ${{ steps.has_config.outputs.files_exists == 'true' }}
        uses: "ramsey/composer-install@v3"
        with:
          # Bust the cache at least once a month - output format: YYYY-MM.
          custom-cache-suffix: $(date -u "+%Y-%m")

      - name: Run PHPStan
        if: ${{ steps.has_config.outputs.files_exists == 'true' }}
        run: phpstan analyse
